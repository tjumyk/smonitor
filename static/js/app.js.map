{
  "version": 3,
  "file": "app.js",
  "sourceRoot": "/",
  "sources": [
    "app.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "app = angular.module 'app', ['ngRoute']\n\napp.config ['$routeProvider', '$locationProvider', ($routeProvider, $locationProvider)->\n  $locationProvider.html5Mode(false)\n  $routeProvider\n    .when '/',\n      templateUrl: 'static/ui/home.html?t=1806201'\n      controller: 'HomeController'\n    .when '/hosts/:hid',\n      templateUrl: 'static/ui/host.html?t=1805171'\n      controller: 'HostController'\n    .otherwise\n      templateUrl: 'static/ui/404.html'\n]\n\napp.directive 'appFooter', ->\n  restrict: 'A'\n  templateUrl: 'static/ui/footer.html?t=1805171'\n\nparse_error_response = (response)->\n  if !!response.data and typeof(response.data) == 'object'\n    return response.data\n  else if response.status == -1\n    return {msg: \"Connection Aborted!\"}\n  else\n    return {msg: '[' + response.status + '] ' + response.statusText, detail: response.data}\n\nhuman_size = (size)->\n  if size == undefined or size == null\n    return 'N/A'\n  units = ['B', 'KB', 'MB', 'GB', 'TB']\n  unit_pos = 0\n  while size >= 1000 and unit_pos < units.length - 1\n    size /= 1024.0\n    unit_pos += 1\n  if size < 1\n    size = Math.round(size * 100) / 100\n  else\n    size = Math.round(size * 10) / 10\n  return \"#{size}#{units[unit_pos]}\"\n\npercent_level = (percent)->\n  if percent == undefined or percent == null\n    return 'N/A'\n  if percent < 80\n    return ''\n  if percent < 90\n    return 'warning'\n  return 'danger'\n\napp.controller('RootController', ['$scope', '$http', '$timeout', '$interval', ($scope, $http, $timeout, $interval)->\n  process_info_message = (info)->\n    if info.error\n      return info\n    info.memory.total_h = human_size(info.memory.total)\n    if info.disk.system\n      info.disk.system.total_h = human_size(info.disk.system.total)\n    else\n      info.disk.system =\n        total_h: 'N/A'\n    if info.disk.boot\n      info.disk.boot.total_h = human_size(info.disk.boot.total)\n    else\n      info.disk.boot =\n        total_h: 'N/A'\n    if info.disk.others\n      info.disk.others.total_h = human_size(info.disk.others.total)\n    else\n      info.disk.others =\n        total_h: 'N/A'\n    if info.swap\n      info.swap.total_h = human_size(info.swap.total)\n    if info.disk.partitions\n      for part in info.disk.partitions\n        part.total_h = human_size(part.total)\n    info.boot_time_moment = moment.unix(info.boot_time)\n    info.boot_time_h = info.boot_time_moment.format('lll')\n    info.up_time = info.boot_time_moment.toNow(true)\n    if info.gpu\n      for gpu in info.gpu.devices\n        gpu.memory.total_h = human_size(gpu.memory.total)\n    if info.npu\n      for npu in info.npu.devices\n        npu.memory.total_h = human_size(npu.memory.total)\n    return info\n\n  process_status_message = (status)->\n    if status.error\n      return status\n    if status.disk.system\n      status.disk.system.percent_h = status.disk.system.percent + '%'\n      status.disk.system.percent_level = percent_level(status.disk.system.percent)\n    else\n      status.disk.system =\n        percent_h: 'N/A'\n    if status.disk.boot\n      status.disk.boot.percent_h = status.disk.boot.percent + '%'\n      status.disk.boot.percent_level = percent_level(status.disk.boot.percent)\n    else\n      status.disk.boot =\n        percent_h: 'N/A'\n    if status.disk.others\n      status.disk.others.percent_h = status.disk.others.percent + '%'\n      status.disk.others.percent_level = percent_level(status.disk.others.percent)\n    else\n      status.disk.others =\n        percent_h: 'N/A'\n    status.cpu.percent_h =status.cpu.percent + '%'\n    status.memory.percent_h = status.memory.percent + '%'\n    status.cpu.percent_level = percent_level(status.cpu.percent)\n    status.memory.percent_level = percent_level(status.memory.percent)\n    return status\n\n  process_full_status_message = (status)->\n    if status.error\n      return status\n    status.memory.available_h = human_size(status.memory.available)\n    status.memory.used_h = human_size(status.memory.used)\n    status.memory.free_h = human_size(status.memory.free)\n    if status.memory.buffers != undefined\n      status.memory.buffers_h = human_size(status.memory.buffers)\n      status.memory.buffers_offset = status.memory.used_percent\n    if status.memory.cached != undefined\n      status.memory.cached_h = human_size(status.memory.cached)\n      status.memory.cached_offset = status.memory.used_percent\n      if status.memory.buffers != undefined\n        status.memory.cached_offset += status.memory.buffers_percent\n    if status.swap\n      status.swap.free_h = human_size(status.swap.free)\n      status.swap.percent_h = status.swap.percent + '%'\n    for name, part of status.disk.partitions\n      part.free_h = human_size(part.free)\n      part.used_h = human_size(part.used)\n      part.percent_level = percent_level(part.percent)\n    for user in status.users\n      user.started_h = moment.unix(user.started).toNow()\n    for proc in status.cpu.top_processes\n      process_proccess_info(proc)\n    for proc in status.memory.top_processes\n      process_proccess_info(proc)\n    if status.gpu\n      for gpu in status.gpu.devices\n        gpu.memory.free_h = human_size(gpu.memory.free)\n        gpu.memory.used_h = human_size(gpu.memory.used)\n        if gpu.power\n          gpu.power.usage_h = Math.round(gpu.power.usage / 100) / 10 + 'W'\n          gpu.power.limit_h = Math.round(gpu.power.limit / 100) / 10 + 'W'\n          gpu.power.percent = Math.round(gpu.power.usage/gpu.power.limit*100)\n        if gpu.performance != undefined\n          gpu.performance_percent = gpu.performance * (-100/15) + 100\n        for proc in gpu.process_list\n          process_proccess_info(proc)\n    if status.npu\n      for npu in status.npu.devices\n        npu.memory.free_h = human_size(npu.memory.free)\n        npu.memory.used_h = human_size(npu.memory.used)\n    return status\n\n  process_proccess_info = (info)->\n    for key, time of info.cpu_times\n      info.cpu_times[key+'_h'] = format_cpu_time(time)\n    if info.cmdline and info.cmdline.length > 0\n      info.cmdline_h = info.cmdline.join(' ').trim()\n    else\n      info.cmdline_h = \"[#{info.name}]\"\n    info.memory_info.rss_h = human_size(info.memory_info.rss)\n    info.memory_info.vms_h = human_size(info.memory_info.vms)\n    if info.memory_info.shared != undefined\n      info.memory_info.shared_h = human_size(info.memory_info.shared)\n    if info.gpu_memory != undefined\n      info.gpu_memory_h = human_size(info.gpu_memory)\n    if info.npu_memory != undefined\n      info.npu_memory_h = human_size(info.npu_memory)\n\n  format_cpu_time = (time)->\n    hours = Math.floor(time / 3600)\n    time -= hours * 3600\n    minutes = Math.floor(time / 60)\n    time -= minutes * 60\n    output = ''\n    if hours > 0\n      output += hours+'h'\n    if minutes < 10\n      output += '0'\n    output += minutes + ':'\n    if time < 10\n      output += '0'\n    output += time.toFixed(2)\n    return output\n\n\n  handle_update_result_message = (host, message)->\n    host.update_result = message\n    host.updating = false\n    if message.success\n      $timeout ->\n        host.update_result = undefined\n      , 5000\n\n  update_uptime = ->\n    for host_group in $scope.config.host_groups\n      for host in host_group.hosts\n        if host.info and host.info.boot_time_moment\n          host.info.up_time = host.info.boot_time_moment.toNow(true)\n\n  $scope.gpu_memory_idle_threshold = 128 * 1024\n\n  $scope.server_update = ->\n    $scope.server_updating = true\n    $http.get('api/check_update').then (response)->\n      labels = response.data\n      if labels.runtime_label == labels.latest_label\n        $scope.server_updating = false\n        alert('Server already up-to-date.')\n      else\n        if !confirm(\"New version available (#{labels.latest_label}). Do you want to update the server right now?\")\n          $scope.server_updating = false\n          return\n        $http.get('api/self_update').then (response)->\n          $scope.server_updating = false\n          alert('Server updated. It may take a few seconds to be ready. Click OK to reload this page.')\n          window.location.reload()\n        , (response)->\n          $scope.server_updating = false\n          if response.status == 401 and response.data.redirect_url # oauth redirect\n            window.location.href = response.data.redirect_url\n          console.error(response)\n          if response.data.error\n            alert(response.data.error)\n    , (response)->\n      $scope.server_updating = false\n      if response.status == 401 and response.data.redirect_url # oauth redirect\n        window.location.href = response.data.redirect_url\n        return\n      if response.data.error\n        alert(response.data.error)\n\n  $scope.server_restart = ->\n    return if !confirm('Do you really want to restart the server?')\n    $scope.server_restarting = true\n    $http.get('api/self_restart').then (response)->\n      $scope.server_restarting = false\n      alert('A restart has been requested. It may take a few seconds to finish. Click OK to reload this page.')\n      window.location.reload()\n    , (response)->\n      $scope.server_restarting = false\n      if response.status == 401 and response.data.redirect_url # oauth redirect\n        window.location.href = response.data.redirect_url\n        return\n      console.error(response)\n      if response.data.error\n        alert(response.data.error)\n\n  init = (raw_config)->\n    config = angular.copy(raw_config)\n    config.site_title = config.site_name + ' \\u00B7 System Monitor'\n\n    $scope.loading_websocket = true\n    socket = io({\n      path: window.location.pathname + 'socket.io'\n      reconnectionAttempts: 10\n    })\n    socket.on 'connect', ->\n      $timeout ->\n        $scope.loading_websocket = false\n        $scope.init_success = true\n    socket.on 'connect_error', ->\n      $timeout ->\n        $scope.loading_websocket = false\n        $scope.init_error =\n          msg: 'WebSocket: connection error'\n    socket.on 'connect_timeout', ->\n      $timeout ->\n        $scope.loading_websocket = false\n        $scope.init_error =\n          msg: 'WebSocket: connection timeout'\n    socket.on 'pong', (latency)->\n      $timeout ->\n        $scope.ping = latency\n    socket.on 'reconnect', ->\n      $('.reconnect.dimmer').dimmer('hide')\n    socket.on 'reconnect_attempt', ->\n      $('.reconnect.dimmer').dimmer({\n        'closable': false\n      }).dimmer('set page dimmer', true).dimmer('show')\n      $http.get('api/config').then (response)->\n        if not angular.equals(raw_config, response.data)\n          window.location.reload()\n      , (response)->\n        if response.data\n          if response.status == 401 and response.data.redirect_url # oauth redirect\n            window.location.href = response.data.redirect_url\n            return\n          if response.data.error\n            alert(response.data.error)\n    socket.on 'reconnect_failed', ->\n      $scope.reconnect_failed = true\n    socket.on 'clients', (clients)->\n      $scope.clients = clients\n      total = 0\n      for id, client of clients\n        ua_str = client.user_agent\n        if ua_str\n          ua = new UAParser(ua_str)\n          client.browser = ua.getBrowser()\n          client.device = ua.getDevice()\n          client.engine = ua.getEngine()\n          client.os = ua.getOS()\n          client.cpu = ua.getCPU()\n        ++total\n      $scope.clients_total = total\n\n    if config.mode == 'app'\n      host_map = {}\n      for host_group in config.host_groups\n        for host in host_group.hosts\n          host_map[host.name] = host\n      socket.on 'info', (message)->\n        $timeout ->\n          for name, info_message of message\n            host_map[name].info = process_info_message(info_message)\n      socket.on 'status', (message)->\n        $timeout ->\n          for name, status_message of message\n            host_map[name].status = process_status_message(status_message)\n      socket.on 'full_status', (message)->\n        $timeout ->\n          for name, full_status_message of message\n            host_map[name].full_status = process_full_status_message(full_status_message)\n      socket.on 'update_result', (message)->\n        $timeout ->\n          for name, result_message of message\n            handle_update_result_message(host_map[name], result_message)\n    else\n      local_host =\n        name: 'local'\n        address: 'localhost'\n      local_host_group =\n        name: 'Local Node'\n        hosts: [local_host]\n      config.host_groups = [local_host_group]\n      socket.on 'info', (message)->\n        $timeout ->\n          local_host.info = process_info_message(message)\n      socket.on 'status', (message)->\n        $timeout ->\n          local_host.status = process_status_message(message)\n      socket.on 'full_status', (message)->\n        $timeout ->\n          local_host.full_status = process_full_status_message(message)\n\n    $scope.config = config\n    $scope.socket = socket\n\n    handle = $interval(update_uptime, 30 * 1000)\n    $scope.$on '$destroy', ->\n      $interval.cancel(handle)\n\n  $scope.init_success = undefined\n  $scope.init_error = undefined\n  $scope.loading_config = true\n  $http.get('api/config').then (response)->\n    init(response.data)\n  , (response)->\n    if response.status == 401 and response.data.redirect_url # oauth redirect\n      window.location.href = response.data.redirect_url\n      return\n    $scope.init_error = parse_error_response(response)\n  .finally ->\n    $scope.loading_config = false\n])\n\napp.controller 'HomeController', ['$scope', '$http', '$timeout', ($scope, $http, $timeout)->\n  $timeout ->\n    $('.init-box').addClass('active')\n  , 100\n]\n\napp.controller 'HostController', ['$scope', '$http', '$timeout', '$routeParams', '$location', ($scope, $http, $timeout, $routeParams, $location)->\n  host_id = $routeParams['hid']\n\n  re_enable_full_status = ->\n    $scope.socket.emit('enable_full_status', host_id)\n\n  $scope.$on '$destroy', ->\n    if $scope.socket and $scope.host\n      $scope.socket.off('reconnect', re_enable_full_status)\n      $scope.socket.emit('disable_full_status', host_id)\n    if $scope.host\n      $scope.host.full_status = undefined\n\n  $scope.$watch 'socket', (socket)->\n    return if !socket\n    for host_group in $scope.config.host_groups\n      for host in host_group.hosts\n        if host.name == host_id\n          $scope.host = host\n          $scope.host_group = host_group\n          break\n      if $scope.host\n        break\n    if !$scope.host\n      $location.path('/404').replace()\n      return\n    $timeout ->\n      $('.host-switch').dropdown()\n    socket.emit('enable_full_status', host_id)\n    socket.on('reconnect', re_enable_full_status)\n\n  $scope.update = ->\n    if $scope.host\n      $scope.host.update_result = undefined\n      $scope.host.updating = true\n      $scope.socket.emit('update', $scope.host.name)\n]\n"
  ]
}